name: publish

on:
    workflow_dispatch:
        inputs:
            package:
                description: Package to publish
                required: true
                type: choice
                options:
                    - mvc
                    - stateful
                    - components
            type:
                description: Version type
                required: true
                type: choice
                options:
                    - patch
                    - minor
                    - major

permissions:
    contents: write

jobs:
    call-build:
        uses: ./.github/workflows/build.yml
        with:
            package: ${{ inputs.package }}
    publish:
        name: "'${{ inputs.package }}' Publish"
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  ref: ${{ github.event.repository.default_branch }}
            - uses: actions/setup-node@v4
              with:
                  node-version: "22"

            - name: Update package.json with new version
              run: |
                  TYPE=${{ inputs.type }}
                  PACKAGE=${{ inputs.package }}
                  echo "Applying $TYPE version update to '$PACKAGE'"
                  npm version $TYPE -w=packages/$PACKAGE

            - name: Commit and push version update
              run: |
                  TYPE=${{ inputs.type }}
                  PACKAGE=${{ inputs.package }}
                  git config user.name "github-actions"
                  git config user.email "github-actions@github.com"
                  git add package.json package-lock.json
                  git commit -m "Update '$PACKAGE' package.json"
                  git push origin ${{ github.event.repository.default_branch }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish to npm
              run: npm publish --access public -w=packages/${{ inputs.package }}
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
